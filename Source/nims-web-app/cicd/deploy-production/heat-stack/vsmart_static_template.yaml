heat_template_version: queens
description: Template for a vsmart service
parameters:

  # VM properties
  image:
    type: string
    description: VM Image used for servers
  vsmart_service_flavor:
    type: string
    description: flavor used by the vsmart service servers
  gateway_config_flavor:
    type: string
    description: flavor used by the   servers
  key_name:
    type: string
    description: Name of keypair to assign to servers
  network:
    type: string
    description: Network used by the servers
  subnet:
    type: string
    description: Subnet used by the servers
  security_group:
    type: string
    description: security_group which will be apply for services

  # gateway VM specific param
  public_lb_pool_id:
    type: string
    description: Pool id of public Load balancer connect to  gateway service
  cloud_gateway_2nd_network:
    type: string
    description: cloud gateway 2nd interface network
  cloud_gateway_2nd_subnet:
    type: string
    description: cloud gateway 2nd interface subnet

  # cloud config VM specific param
  private_lb_pool_id:
    type: string
    description: Pool id of public Load balancer connect to  gateway service
  cloud_config_git_uri:
    type: string
    description: Uri of git repository which cloudconfig service connect with

  # auto scaling properties
  flag:
    type: boolean
    description: enable alarm
  min_size:
    type: number
    description: min vm per services
  max_size:
    type: number
    description: max vm per services
  refresh_time:
    type: number
    description: time seconds between two scaling actions
  project_id:
    type: string
    description: openstack project id for autoscaling isolation in only one project

  scaling_in_adjustment:
    type: number
    description: scaling_adjustment vm number between two scaling actions
  scaling_out_adjustment:
    type: number
    description: scaling_adjustment vm number between two scaling actions

  vsmart_service_ram_high_threshold:
    type: number
    description: vsmart service memory usage threshold when scale out
  vsmart_service_ram_low_threshold:
      type: number
      description: vsmart service memory usage threshold when scale in
  vsmart_service_cpu_high_threshold:
      type: number
      description: vsmart service cpu percent threshold when scale out
  vsmart_service_cpu_low_threshold:
    type: number
    description: vsmart service cpu percent threshold when scale in

  gateway_config_ram_high_threshold:
    type: number
    description: cloud gateway and cloud config memory usage threshold when scale out
  gateway_config_ram_low_threshold:
    type: number
    description: cloud gateway and cloud config memory usage threshold when scale in
  gateway_config_cpu_high_threshold:
    type: number
    description: cloud gateway and cloud config cpu percent threshold when scale out
  gateway_config_cpu_low_threshold:
    type: number
    description: cloud gateway and cloud config cpu percent threshold when scale in

  evaluation_periods:
    type: number
    description: number of sample aodh used when decide to scale
  granularity:
    type: number
    description: time between two aodh evaluation action

  #application properties
  service_version:
    type: string
  service_docker_image_repo:
    type: string
    description: >-
      docker image_repo for service which will run in this server, include service
      image name and version
  service_log_volume:
    type: string
    description: >-
      docker volume contains services logs
  elastic_search_ip:
    type: string
    description: elastic search ip
  jaeger_collector_url:
    type: string
    description: jaeger_collector_url
  working_dir:
    type: string
    description: VM working directory
  cloud_config_uri:
    type: string
    description: Cloud config URI Address
  cloud_config_commit_id:
    type: string
    description: Cloud config commit id used for this deploy
  active_profile:
    type: string
    description: Service active profile config

resources:
  vsmart-configuration-service-asg:
    type: OS::Vsmart::Service::Autoscaling
    properties:
      service_name: "configuration-service"
      service_template: OS::Vsmart::Service::CloudConfig
      service_version: { get_param: service_version }
      service_docker_image_repo: { get_param: service_docker_image_repo }
      flavor: { get_param: gateway_config_flavor }
      image: {get_param: image}
      key_name: {get_param: key_name}
      network: { get_param: network }
      subnet: { get_param: subnet }
      security_group: { get_param: security_group }
      elastic_search_ip: { get_param: elastic_search_ip}
      jaeger_collector_url: {get_param: jaeger_collector_url}
      working_dir: { get_param: working_dir }
      service_log_volume: { get_param: service_log_volume }
      cloud_config_uri: { get_param: cloud_config_uri }
      cloud_config_commit_id: {get_param: cloud_config_commit_id}
      service_port: 8088
      active_profile: { get_param: active_profile }

      flag: { get_param: flag }
      min_size: { get_param: min_size }
      max_size: { get_param: max_size }
      refresh_time: { get_param: refresh_time }
      project_id: { get_param: project_id }

      scaling_in_adjustment: { get_param: scaling_in_adjustment }
      scaling_out_adjustment: { get_param: scaling_out_adjustment }

      ram_high_threshold: { get_param: gateway_config_ram_high_threshold }
      ram_low_threshold: { get_param: gateway_config_ram_low_threshold }
      cpu_high_threshold: { get_param: gateway_config_cpu_high_threshold }
      cpu_low_threshold: { get_param: gateway_config_cpu_low_threshold }

      evaluation_periods: { get_param: evaluation_periods }
      granularity: { get_param: granularity }

      private_lb_pool_id: {get_param: private_lb_pool_id}
      cloud_config_git_uri: {get_param: cloud_config_git_uri}

  vsmart-gateway-service-asg:
    type: OS::Vsmart::Service::Autoscaling
    properties:
      service_name: "gateway-service"
      service_template: OS::Vsmart::Service::Gateway
      service_version: { get_param: service_version }
      service_docker_image_repo: { get_param: service_docker_image_repo }
      flavor: { get_param: gateway_config_flavor }
      image: {get_param: image}
      key_name: {get_param: key_name}
      network: { get_param: network }
      subnet: { get_param: subnet }
      security_group: { get_param: security_group }
      elastic_search_ip: { get_param: elastic_search_ip}
      jaeger_collector_url: {get_param: jaeger_collector_url}
      working_dir: { get_param: working_dir }
      service_log_volume: { get_param: service_log_volume }
      cloud_config_uri: { get_param: cloud_config_uri }
      cloud_config_commit_id: {get_param: cloud_config_commit_id}
      service_port: 8060
      active_profile: { get_param: active_profile }

      flag: { get_param: flag }
      min_size: { get_param: min_size }
      max_size: { get_param: max_size }
      refresh_time: { get_param: refresh_time }
      project_id: { get_param: project_id }

      scaling_in_adjustment: { get_param: scaling_in_adjustment }
      scaling_out_adjustment: { get_param: scaling_out_adjustment }

      ram_high_threshold: { get_param: gateway_config_ram_high_threshold }
      ram_low_threshold: { get_param: gateway_config_ram_low_threshold }
      cpu_high_threshold: { get_param: gateway_config_cpu_high_threshold }
      cpu_low_threshold: { get_param: gateway_config_cpu_low_threshold }

      evaluation_periods: { get_param: evaluation_periods }
      granularity: { get_param: granularity }

      public_lb_pool_id: {get_param: public_lb_pool_id}
      cloud_gateway_2nd_network: {get_param: cloud_gateway_2nd_network}
      cloud_gateway_2nd_subnet: {get_param: cloud_gateway_2nd_subnet}


  vsmart-authz-service-asg:
    type: OS::Vsmart::Service::Autoscaling
    properties:
      service_name: "authz-service"
      service_template: OS::Vsmart::Service::Common
      service_version: { get_param: service_version }
      service_docker_image_repo: { get_param: service_docker_image_repo }
      flavor: { get_param: vsmart_service_flavor }
      image: {get_param: image}
      key_name: {get_param: key_name}
      network: { get_param: network }
      subnet: { get_param: subnet }
      security_group: { get_param: security_group }
      elastic_search_ip: { get_param: elastic_search_ip}
      jaeger_collector_url: {get_param: jaeger_collector_url}
      working_dir: { get_param: working_dir }
      service_log_volume: { get_param: service_log_volume }
      cloud_config_uri: { get_param: cloud_config_uri }
      cloud_config_commit_id: {get_param: cloud_config_commit_id}
      service_port: 8070
      active_profile: { get_param: active_profile }

      flag: { get_param: flag }
      min_size: { get_param: min_size }
      max_size: { get_param: max_size }
      refresh_time: { get_param: refresh_time }
      project_id: { get_param: project_id }

      scaling_in_adjustment: { get_param: scaling_in_adjustment }
      scaling_out_adjustment: { get_param: scaling_out_adjustment }

      ram_high_threshold: { get_param: vsmart_service_ram_high_threshold }
      ram_low_threshold: { get_param: vsmart_service_ram_low_threshold }
      cpu_high_threshold: { get_param: vsmart_service_cpu_high_threshold }
      cpu_low_threshold: { get_param: vsmart_service_cpu_low_threshold }

      evaluation_periods: { get_param: evaluation_periods }
      granularity: { get_param: granularity }



  vsmart-cdbr-service-asg:
    type: OS::Vsmart::Service::Autoscaling
    properties:
      service_name: "cdbr-service"
      service_template: OS::Vsmart::Service::Common
      service_version: { get_param: service_version }
      service_docker_image_repo: { get_param: service_docker_image_repo }
      flavor: { get_param: vsmart_service_flavor }
      image: {get_param: image}
      key_name: {get_param: key_name}
      network: { get_param: network }
      subnet: { get_param: subnet }
      security_group: { get_param: security_group }
      elastic_search_ip: { get_param: elastic_search_ip}
      jaeger_collector_url: {get_param: jaeger_collector_url}
      working_dir: { get_param: working_dir }
      service_log_volume: { get_param: service_log_volume }
      cloud_config_uri: { get_param: cloud_config_uri }
      cloud_config_commit_id: {get_param: cloud_config_commit_id}
      service_port: 8071
      active_profile: { get_param: active_profile }

      flag: { get_param: flag }
      min_size: { get_param: min_size }
      max_size: { get_param: max_size }
      refresh_time: { get_param: refresh_time }
      project_id: { get_param: project_id }

      scaling_in_adjustment: { get_param: scaling_in_adjustment }
      scaling_out_adjustment: { get_param: scaling_out_adjustment }

      ram_high_threshold: { get_param: vsmart_service_ram_high_threshold }
      ram_low_threshold: { get_param: vsmart_service_ram_low_threshold }
      cpu_high_threshold: { get_param: vsmart_service_cpu_high_threshold }
      cpu_low_threshold: { get_param: vsmart_service_cpu_low_threshold }

      evaluation_periods: { get_param: evaluation_periods }
      granularity: { get_param: granularity }



  vsmart-gnoc-service-asg:
    type: OS::Vsmart::Service::Autoscaling
    properties:
      service_name: "gnoc-service"
      service_template: OS::Vsmart::Service::Common
      service_version: { get_param: service_version }
      service_docker_image_repo: { get_param: service_docker_image_repo }
      flavor: { get_param: vsmart_service_flavor }
      image: {get_param: image}
      key_name: {get_param: key_name}
      network: { get_param: network }
      subnet: { get_param: subnet }
      security_group: { get_param: security_group }
      elastic_search_ip: { get_param: elastic_search_ip}
      jaeger_collector_url: {get_param: jaeger_collector_url}
      working_dir: { get_param: working_dir }
      service_log_volume: { get_param: service_log_volume }
      cloud_config_uri: { get_param: cloud_config_uri }
      cloud_config_commit_id: {get_param: cloud_config_commit_id}
      service_port: 8072
      active_profile: { get_param: active_profile }

      flag: { get_param: flag }
      min_size: { get_param: min_size }
      max_size: { get_param: max_size }
      refresh_time: { get_param: refresh_time }
      project_id: { get_param: project_id }

      scaling_in_adjustment: { get_param: scaling_in_adjustment }
      scaling_out_adjustment: { get_param: scaling_out_adjustment }

      ram_high_threshold: { get_param: vsmart_service_ram_high_threshold }
      ram_low_threshold: { get_param: vsmart_service_ram_low_threshold }
      cpu_high_threshold: { get_param: vsmart_service_cpu_high_threshold }
      cpu_low_threshold: { get_param: vsmart_service_cpu_low_threshold }

      evaluation_periods: { get_param: evaluation_periods }
      granularity: { get_param: granularity }



  vsmart-infra-maintaining-service-asg:
    type: OS::Vsmart::Service::Autoscaling
    properties:
      service_name: "infra-maintaining-service"
      service_template: OS::Vsmart::Service::Common
      service_version: { get_param: service_version }
      service_docker_image_repo: { get_param: service_docker_image_repo }
      flavor: { get_param: vsmart_service_flavor }
      image: {get_param: image}
      key_name: {get_param: key_name}
      network: { get_param: network }
      subnet: { get_param: subnet }
      security_group: { get_param: security_group }
      elastic_search_ip: { get_param: elastic_search_ip}
      jaeger_collector_url: {get_param: jaeger_collector_url}
      working_dir: { get_param: working_dir }
      service_log_volume: { get_param: service_log_volume }
      cloud_config_uri: { get_param: cloud_config_uri }
      cloud_config_commit_id: {get_param: cloud_config_commit_id}
      service_port: 8075
      active_profile: { get_param: active_profile }

      flag: { get_param: flag }
      min_size: { get_param: min_size }
      max_size: { get_param: max_size }
      refresh_time: { get_param: refresh_time }
      project_id: { get_param: project_id }

      scaling_in_adjustment: { get_param: scaling_in_adjustment }
      scaling_out_adjustment: { get_param: scaling_out_adjustment }

      ram_high_threshold: { get_param: vsmart_service_ram_high_threshold }
      ram_low_threshold: { get_param: vsmart_service_ram_low_threshold }
      cpu_high_threshold: { get_param: vsmart_service_cpu_high_threshold }
      cpu_low_threshold: { get_param: vsmart_service_cpu_low_threshold }

      evaluation_periods: { get_param: evaluation_periods }
      granularity: { get_param: granularity }



  vsmart-query-service-asg:
    type: OS::Vsmart::Service::Autoscaling
    properties:
      service_name: "query-service"
      service_template: OS::Vsmart::Service::Common
      service_version: { get_param: service_version }
      service_docker_image_repo: { get_param: service_docker_image_repo }
      flavor: { get_param: vsmart_service_flavor }
      image: {get_param: image}
      key_name: {get_param: key_name}
      network: { get_param: network }
      subnet: { get_param: subnet }
      security_group: { get_param: security_group }
      elastic_search_ip: { get_param: elastic_search_ip}
      jaeger_collector_url: {get_param: jaeger_collector_url}
      working_dir: { get_param: working_dir }
      service_log_volume: { get_param: service_log_volume }
      cloud_config_uri: { get_param: cloud_config_uri }
      cloud_config_commit_id: {get_param: cloud_config_commit_id}
      service_port: 8076
      active_profile: { get_param: active_profile }

      flag: { get_param: flag }
      min_size: { get_param: min_size }
      max_size: { get_param: max_size }
      refresh_time: { get_param: refresh_time }
      project_id: { get_param: project_id }

      scaling_in_adjustment: { get_param: scaling_in_adjustment }
      scaling_out_adjustment: { get_param: scaling_out_adjustment }

      ram_high_threshold: { get_param: vsmart_service_ram_high_threshold }
      ram_low_threshold: { get_param: vsmart_service_ram_low_threshold }
      cpu_high_threshold: { get_param: vsmart_service_cpu_high_threshold }
      cpu_low_threshold: { get_param: vsmart_service_cpu_low_threshold }

      evaluation_periods: { get_param: evaluation_periods }
      granularity: { get_param: granularity }



  vsmart-wirez-service-asg:
    type: OS::Vsmart::Service::Autoscaling
    properties:
      service_name: "wirez-service"
      service_template: OS::Vsmart::Service::Common
      service_version: { get_param: service_version }
      service_docker_image_repo: { get_param: service_docker_image_repo }
      flavor: { get_param: vsmart_service_flavor }
      image: {get_param: image}
      key_name: {get_param: key_name}
      network: { get_param: network }
      subnet: { get_param: subnet }
      security_group: { get_param: security_group }
      elastic_search_ip: { get_param: elastic_search_ip}
      jaeger_collector_url: {get_param: jaeger_collector_url}
      working_dir: { get_param: working_dir }
      service_log_volume: { get_param: service_log_volume }
      cloud_config_uri: { get_param: cloud_config_uri }
      cloud_config_commit_id: {get_param: cloud_config_commit_id}
      service_port: 8077
      active_profile: { get_param: active_profile }

      flag: { get_param: flag }
      min_size: { get_param: min_size }
      max_size: { get_param: max_size }
      refresh_time: { get_param: refresh_time }
      project_id: { get_param: project_id }

      scaling_in_adjustment: { get_param: scaling_in_adjustment }
      scaling_out_adjustment: { get_param: scaling_out_adjustment }

      ram_high_threshold: { get_param: vsmart_service_ram_high_threshold }
      ram_low_threshold: { get_param: vsmart_service_ram_low_threshold }
      cpu_high_threshold: { get_param: vsmart_service_cpu_high_threshold }
      cpu_low_threshold: { get_param: vsmart_service_cpu_low_threshold }

      evaluation_periods: { get_param: evaluation_periods }
      granularity: { get_param: granularity }



  vsmart-hotpot-service-asg:
    type: OS::Vsmart::Service::Autoscaling
    properties:
      service_name: "hotpot-service"
      service_template: OS::Vsmart::Service::Common
      service_version: { get_param: service_version }
      service_docker_image_repo: { get_param: service_docker_image_repo }
      flavor: { get_param: vsmart_service_flavor }
      image: {get_param: image}
      key_name: {get_param: key_name}
      network: { get_param: network }
      subnet: { get_param: subnet }
      security_group: { get_param: security_group }
      elastic_search_ip: { get_param: elastic_search_ip}
      jaeger_collector_url: {get_param: jaeger_collector_url}
      working_dir: { get_param: working_dir }
      service_log_volume: { get_param: service_log_volume }
      cloud_config_uri: { get_param: cloud_config_uri }
      cloud_config_commit_id: {get_param: cloud_config_commit_id}
      service_port: 8073
      active_profile: { get_param: active_profile }

      flag: { get_param: flag }
      min_size: { get_param: min_size }
      max_size: { get_param: max_size }
      refresh_time: { get_param: refresh_time }
      project_id: { get_param: project_id }

      scaling_in_adjustment: { get_param: scaling_in_adjustment }
      scaling_out_adjustment: { get_param: scaling_out_adjustment }

      ram_high_threshold: { get_param: vsmart_service_ram_high_threshold }
      ram_low_threshold: { get_param: vsmart_service_ram_low_threshold }
      cpu_high_threshold: { get_param: vsmart_service_cpu_high_threshold }
      cpu_low_threshold: { get_param: vsmart_service_cpu_low_threshold }

      evaluation_periods: { get_param: evaluation_periods }
      granularity: { get_param: granularity }
